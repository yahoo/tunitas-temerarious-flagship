// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <hpp>
#import want.detail.series.Object
namespace want {
  //
  // The "type" of the series is defined by the type of the 1st argument.
  //
  //   auto list = series(Phase::FPP, Phase::TPP, Phase::XCPP)
  //   for (auto ph : series(Phase::FPP, Phase::IPP, Phase::CPP, Phase::XCPP)) {
  //       ...do stuff...
  //   }
  //
  template<typename VALUE, typename... VALUES> inline auto series(VALUE, VALUES...) -> detail::series::Object<VALUE, VALUES...>;
}
#endiv
#divert <ipp>
template<typename VALUE, typename... VALUES> auto want::series(VALUE arg_value, VALUES... arg_values) -> detail::series::Object<VALUE, VALUES...> {
  return detail::series::Object<VALUE, VALUES...>(arg_value, arg_values...);
}
#endiv
