// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
#import want.doppel.Ganger
#import std.remove_reference
namespace want {
  // https://en.wikipedia.org/wiki/Doppelg%C3%A4nger
  // Ahem therefore and thusly, "doppelganger" is a noun described by an adjective "double walker" or "double goer"
  // As such, we take "doppelgang" as the verb "to double-walk"
  template<typename CONTAINER1, typename CONTAINER2> inline auto doppelgang(CONTAINER1 &&, CONTAINER2 &&) -> doppel::Ganger<CONTAINER1, CONTAINER2>;
}
#endiv
#divert <hpp>
#import std.forward
template<typename CONTAINER1, typename CONTAINER2> auto want::doppelgang(CONTAINER1 &&anon1, CONTAINER2 &&anon2) -> doppel::Ganger<CONTAINER1, CONTAINER2> {
  return doppel::Ganger<CONTAINER1, CONTAINER2>(std::forward<CONTAINER1>(anon1), std::forward<CONTAINER2>(anon2));
}
#endiv
