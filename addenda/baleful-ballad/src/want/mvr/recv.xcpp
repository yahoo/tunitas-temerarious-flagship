// -*- c++ -*- in the SCOLD styling that is so popular these days
#divert <hpp>
#import std.make_tuple
#import std.tie
namespace want {
  namespace mvr {
    //
    // Concept: TYPES is a package of types
    //
    // Usage
    //     recv(TYPES...) = send(types...)
    // ...
    //     recv(values...) = some_function()
    //       where
    //           auto some_function -> anything {
    //             return send(values...);
    //           }
    //
    template<typename... TYPES> inline constexpr auto send(TYPES &&...args) -> decltype(std::make_tuple(args...));
    template<typename... TYPES> inline auto recv(TYPES &...args) noexcept -> decltype(std::tie(args...));
  }
}
#endiv
#divert <ipp>
#import std.make_tuple
#import std.tie
template<typename... TYPES> constexpr auto want::mvr::send(TYPES &&...args) -> decltype(std::make_tuple(args...)) {
    return std::make_tuple(args...);
}

template<typename... TYPES> auto want::mvr::recv(TYPES &...args) noexcept -> decltype(std::tie(args...)) {
    return std::tie(args...);
}
#endiv
#divert <tpp>
// for completeness...
#import want.mvr.send
#endiv
