// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold {
  class Processor;
}
#endiv
#divert <hpp>
#import scold.processor.Prototype
#forward scold.Director
#forward scold.processor.Generic
class scold::Processor : public processor::Prototype {
  using ancestor = Prototype;
protected:
  friend class Director;
  inline Processor(line_type &, processor::Generic &);
public:
  inline auto operator()(phase_type, output_type &, imports_type &, entails_type &, depends_type &) -> void;
protected:
  line_type &line;
  processor::Generic &action;
};
#endiv
#divert <ipp>
scold::Processor::Processor(line_type &arg_line, processor::Generic &arg_action)
  : line(arg_line)
  , action(arg_action) {
  ;
}

#import scold.processor.Generic
auto scold::Processor::operator()(phase_type phase, output_type &out, imports_type &imports, entails_type &entails, depends_type &depends) -> void {
  action(phase, line, out, imports, entails, depends);
}
#endiv
