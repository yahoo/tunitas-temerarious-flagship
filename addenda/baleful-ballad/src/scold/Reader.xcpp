// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold {
  //
  // Read the (xcpp) file
  // Throw slurp::Failure on failure to slurp
  //    with relevant std::string filename() and std::error_code code()
  //
  // Usage:
  //     Reader reader;
  //     auto lines = reader(filename)
  //
  class Reader;
}
#endiv
#divert <hpp>
#import std.string
#import std.vector
class scold::Reader {
public:
  using input_type = std::string; // a filename; a path to a ".../filename.xcpp"
  using output_type = std::vector<std::string>;
  // Throws if it cannot open the file and slurp it in.
  inline auto operator()(std::string const &filename) -> output_type;
};
#endiv
#divert <ipp>
#import slurp.file.read
#import std.move
auto scold::Reader::operator()(input_type const &in) -> output_type {
  // This will throw if it fails to open or read the full file
  auto r = slurp::file::read<output_type>(in);
  return r;
}
#endiv

