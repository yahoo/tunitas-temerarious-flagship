// -*- c++ -*- in the SCOLD styling that is so popular these days
#divert <hpp>
//
// Part of the interface of scold::config::Context
// Implements "gcc-style" error messages with the filename & line number as context
//
#import std.ostream
#import scold.config.Generic
#import scold.config.Context
#import scold.line.Item
namespace scold::config {
  inline auto error(Generic const &, Context &, line::Item const &) -> std::ostream &;
  inline auto warning(Generic const &, Context &, line::Item const &) -> std::ostream &;
  inline auto notice(Generic const &, Context &, line::Item const &) -> std::ostream &;
  inline auto verbose(Generic const &, Context &, line::Item const &) -> std::ostream &;
  inline auto debug(Generic const &, Context &, line::Item const &) -> std::ostream &;
}
#endiv
#divert <ipp>
#import scold.style.gcc
#import std.cerr
auto scold::config::error(Generic const &cfg, Context &ctx, line::Item const &line) -> std::ostream & {
  ctx.error_count++;
  return std::cerr << style::gcc(ctx, line) << "error, ";
}

auto scold::config::warning(Generic const &cfg, Context &ctx, line::Item const &line) -> std::ostream & {
  ctx.warning_count++;
  if (cfg.quiet_mode) {
    return detail::devnull;
  } else {
    return std::cerr << style::gcc(ctx, line) << "warning, ";
  }
}

auto scold::config::notice(Generic const &cfg, Context &ctx, line::Item const &line) -> std::ostream & {
  if (cfg.quiet_mode) {
    return detail::devnull;
  } else {
    return std::cerr << style::gcc(ctx, line) << "notice, ";
  }
}

auto scold::config::verbose(Generic const &cfg, Context &ctx, line::Item const &line) -> std::ostream & {
  if (cfg.verbose_mode) {
    return std::cerr << style::gcc(ctx, line) << "verbose, ";
  } else {
    return detail::devnull;
  }
}

auto scold::config::debug(Generic const &cfg, Context &ctx, line::Item const &line) -> std::ostream & {
  if (cfg.debug_mode) {
    return std::cerr << style::gcc(ctx, line) << "debug, ";
  } else {
    return detail::devnull;
  }
}
#endiv
