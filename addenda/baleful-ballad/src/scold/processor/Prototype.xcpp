// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold {
  namespace processor {
    class Prototype;
  }
}
#endiv
#divert <hpp>
#import scold.Phase
#import scold.Stream
#import scold.Streams
#import scold.Accruals
class scold::processor::Prototype  {
public:
  // tuppelgang(...) over these
  using phase_type = Phase;
  // the input is concurrent streams, organized by phase
  using inputs_type = Streams;
  using input_type = Stream;
  using line_type = Stream::value_type;
  // the output is concurrent streams, organized by phase
  using outputs_type = Streams;
  using output_type = Stream;
  // not iterated in the tuppelgang
  using imports_type = Streams; // or Accruals<IMPORTS>
  using entails_type = Streams; // or Accruals<ENTAILS>
  using depends_type = Accruals<DEPEND>;
protected:
  Prototype() = default;
};
#endiv
