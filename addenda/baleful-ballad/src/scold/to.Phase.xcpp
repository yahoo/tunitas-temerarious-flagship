// -*- c++ -*- with SCOLD stylings
#divert <hpp>
// The module name <scold.to.Phase> corresponds to
//    the function template to<...>(...)
//    specialized to return scold::Phase
#import scold.to.RESULT.string
#import scold.Phase
namespace scold {
  template<> inline auto to<Phase>(std::string const &) -> Phase;
}
#endiv
#divert <ipp>
#import scold.phase.Definition
#import std.invalid_argument
template<> auto scold::to<scold::Phase>(std::string const &subject) -> Phase {
  auto sav = scold::phase::Definition::to(subject);
  if (!ok(sav)) {
    throw std::invalid_argument("not a Phase");
  }
  return value(sav);
}
#endiv
