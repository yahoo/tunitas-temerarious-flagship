// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <hpp>
#import std.ostream
#import std.string
namespace scold {
  namespace fragment {
    namespace detail {
      inline auto script_rm(std::ostream &, std::string const &qualifier) -> void;
      template<typename FILENAME, typename... FILENAMES> inline auto script_rm(std::ostream &, std::string const &qualifier, FILENAME const &, FILENAMES const &...) -> void;
    }
  }
}
#endiv
#divert <ipp>
auto scold::fragment::detail::script_rm(std::ostream &, std::string const &) -> void {
  // do nothing
}

template<typename FILENAME, typename... FILENAMES>  auto scold::fragment::detail::script_rm(std::ostream &outbound, std::string const &qualifier, FILENAME const &name, FILENAMES const &...rest) -> void {
  outbound << ' ' << qualifier << '/' << name;
  script_rm(outbound, qualifier, rest...);
}
#endiv
