// -*- c++ -*- in the SCOLD style that is all the fashion nowadays
#divert <hpp>
#import scold.suffix.Suffix
#import std.string
namespace scold {
  namespace suffix {
    // and findable by ADL
    auto resuffix(std::string const &pathname_filename, Suffix) -> std::string;
  }
}
#endiv
#divert <cpp>
#import scold.suffix.Definition
auto scold::suffix::resuffix(std::string const &pathname_filename, Suffix s) -> std::string {
  Definition def(s);
  std::string::size_type slash = pathname_filename.rfind('/');
  std::string ret;
  if (std::string::npos == slash) {
    // no '/' so it is a simple filename
    std::string::size_type dot = pathname_filename.rfind('.');
    if (std::string::npos == dot) {
      ret += pathname_filename;
    } else {
      ret += pathname_filename.substr(0, dot);
    }
  } else {
    // the '.' has to be after the '/'
    std::string::size_type dot = pathname_filename.rfind('.');
    if (std::string::npos == dot) {
      ret += pathname_filename;
    } else if (dot < slash) {
      // the '.' is before the '/' (ignore it)
      ret += pathname_filename;
    } else {
      ret += pathname_filename.substr(0, dot);
    }
  }
  ret += '.';
  ret += def.str();
  return ret;
}
#endiv
