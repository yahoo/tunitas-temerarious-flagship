// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold {
  //
  // PIOIE = (phase, ins, outs [, imports ,entails] )
  //
  // Give names to the tuple members ... for easy reference
  // Usage:
  //     for (Pioie p : multigang(Phases(), ins, outs) {
  //         ....do stuff...
  //     }
  //
  class Pioie;
}
#endiv
#divert <hpp>
#import scold.processor.Prototype
#import std.tuple
class scold::Pioie : public processor::Prototype {
  using ancestor = processor::Prototype;
public:
  using tuple_type = std::tuple<phase_type, input_type &, output_type &, imports_type &, entails_type &>;
  inline /*implicit*/ Pioie(tuple_type &);
  phase_type const phase;
  input_type &in;
  output_type &out;
  imports_type &imports;
  entails_type &entails;
};
#endiv
#divert <ipp>
#import std.get
scold::Pioie::Pioie(tuple_type &arg)
  : phase(std::get<0>(arg))
  , in(std::get<1>(arg))
  , out(std::get<2>(arg))
  , imports(std::get<3>(arg))
  , entails(std::get<4>(arg)) {
  ;
}
#endiv
