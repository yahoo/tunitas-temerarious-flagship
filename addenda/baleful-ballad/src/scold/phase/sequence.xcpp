// -*- c++ -*- in the SCOLD stylings
#divert <hpp>
#import scold.Phase
#import std.array
#import std.vector
namespace scold {
  namespace phase {
    // CONTAINER must be ordered, and hold "five"
    // use series<std:vector>, series<std:list>, , series<std::forward_list>
    template<template<typename, typename = std::allocator<::scold::Phase>> class CONTAINER> inline auto series1() -> CONTAINER<Phase>;

    // use order<std::array<Phase, 5>>
    template<class CONTAINER> inline auto series0() -> CONTAINER;

    // in a standard "cheap" container
    inline auto sequence() -> std::array<Phase, 5>;
  }
}
#endiv
#divert <ipp>
template<template<typename, typename = std::allocator<::scold::Phase>> class CONTAINER> auto scold::phase::series1() -> CONTAINER<Phase> {
  return CONTAINER<Phase>{Phase::FPP, Phase::HPP, Phase::IPP, Phase::TPP, Phase::CPP};
}

template<class CONTAINER> auto scold::phase::series0() -> CONTAINER {
  return CONTAINER{Phase::FPP, Phase::HPP, Phase::IPP, Phase::TPP, Phase::CPP};
}

auto scold::phase::sequence() -> std::array<Phase, 5> {
  return series0<std::array<Phase, 5>>();
}
#endiv
