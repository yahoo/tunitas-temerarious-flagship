// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
#forward scold.detail.plural.Noun
#import scold.detail.plural.Policies
namespace scold {
  namespace detail {
    namespace plural {
      //
      // See the commentariat around scold::plural(...)
      //
      template<typename INTEGER> class Noun<INTEGER, AddS>;     
    }
  }
}
#endiv
#divert <hpp>
#import scold.detail.plural.Prototype
template<typename INTEGER> class scold::detail::plural::Noun<INTEGER, scold::detail::plural::AddS> : public Prototype<INTEGER> {
  using ancestor = Prototype<INTEGER>;
public:
  inline Noun(typename ancestor::value_type, std::string const &noun_basis);
};
#endiv
#divert <ipp>
template<typename INTEGER> scold::detail::plural::Noun<INTEGER, scold::detail::plural::AddS>::Noun(typename ancestor::value_type arg_value, std::string const &noun_basis)
  : ancestor(arg_value, noun_basis) {
  if (1 != ancestor::value) {
    ancestor::noun += 's';
  }
}
#endiv

