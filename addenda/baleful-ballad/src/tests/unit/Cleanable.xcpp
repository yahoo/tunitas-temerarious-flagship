// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    class Cleanable;
  }
}
#divert </fpp>
#divert <hpp>
#import std.string
class tests::unit::Cleanable {
protected:
  ~Cleanable() = default; // descendants only
public:
  inline explicit Cleanable(std::string const &pathname);
  Cleanable(Cleanable const &) = delete;
  auto operator=(Cleanable const &) -> Cleanable & = delete;
protected:
  // A file name or a directory name, depending upon the descendant's use case.
  std::string pathname;
};
#endiv
#divert <ipp>
tests::unit::Cleanable::Cleanable(std::string const &arg_pathname)
  : pathname(arg_pathname) {
  ;
}
#endiv
