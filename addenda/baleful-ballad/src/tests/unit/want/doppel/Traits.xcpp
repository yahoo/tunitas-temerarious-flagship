// -*- c++ -*- C++23 with S.C.O.L.D. stylings; For terms, see the LICENSE file at the top of the repository.
#divert <fpp>
namespace tests {
  namespace unit {
    namespace want {
      namespace doppel {
        class Traits;
      }
    }
  }
}
#endiv
#divert <hpp>
class tests::unit::want::doppel::Traits : public cppunit::test::Fixture {
public:
  auto test_something() -> void;

  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::want::doppel::Traits::test_something() -> void {
  CPPUNIT_ASSERT(true);
}

auto tests::unit::want::doppel::Traits::suite() -> cppunit::Test * {
  using namespace ::unit::rigging::suite;
  Stream s("Traits");
  s << call("something", &Traits::test_something)
    ;
  return finalize(s);
}
#endiv
