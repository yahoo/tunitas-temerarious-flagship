: -*- sh -*- script, so source this
# source @hypogeal_twilight_libdir@/config.settings.function-library || exit 1
# source this from config.settings.in

#
# Usage:
#
#     declare_with_metadirectory prefix /opt/scold
#     declare_with_metadirectory with_external /build/scold
#     declare_with_metadirectory with_submodules @PWD@/submodules
#
#     declare_with_std scold /opt/scold
#     declare_with_nonstd gcc /opt/gcc
#
#     declare_with_submodule module-c-string
#     declare_with_submodule module-options
#     declare_with_submodule module-sys
#

function declare_with_metadirectory() {
    local withvar=$1; shift
    local withvar_default=$1; shift
    #
    # WATCHOUT in configure.ac
    #    variables known to autoconf are not empty ("") or the value "unset", rather they are set to "NONE"
    #    variables unknown to autoconf  are empty ("") as per the usual shell rules.
    #
    local withvar_value=$(eval "echo \"\${$withvar:-NONE}\"")
    if test NONE = "$withvar_value" ; then
        if [ -d "$withvar_default" ] ; then
            eval "$withvar=\"${withvar_default}\""
            echo "debug: found directory $withvar_default, set $withvar=$withvar_default"
        else
            echo "debug: missing directory found $withvar_default, not setting $withvar to any default value"
        fi
    fi
    eval "echo \"debug: $withvar=\${$withvar:-(still unset)}\""
}

function declare_with__something() {
    local what=$1; shift
    local name=$1; shift
    local value=$1; shift
    local name_dash="${what}-${name}"; shift
    local name_underscore=${name_dash//-/_}
    local with_name_underscore="with_${name_underscore}"
    eval "test NONE = \${${with_name_underscore}:-NONE} && ${with_name_underscore}='$value'"
    eval "echo \"debug: set ${with_name_underscore}=\${${with_name_underscore}:-unset}\""
}

function declare_with_nonstd() {
    declare_with__something nonstd "$1" "$2"
}

function declare_with_std() {
    declare_with__something std "$1" "$2"
}

function declare_with_submodule() {
    local name_dash=$1; shift
    local name_underscore=${name_dash//-/_}
    local with_name_underscore="with_${name_underscore}"
    eval "test -d ${with_submodules}/${name_dash} && : \${with_${name_underscore}:=${with_submodules}/${name_dash}}"
    eval "echo \"debug: set with_${name_underscore}=\${with_${name_underscore}:-unset}\""
}
