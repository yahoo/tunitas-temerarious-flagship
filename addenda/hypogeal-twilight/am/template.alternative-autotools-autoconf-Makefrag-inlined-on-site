#TEMPLATE as an AUTOMAKE -*- Makefile -*- fragment and must obey AUTOMAKE-GNU Cooperation Principles
#TEMPLATE 
#TEMPLATE Usage:
#TEMPLATE
#TEMPLATE   cd .../yourproject
#TEMPLATE   mkdir -p src/automake/autoconf
#TEMPLATE   cp /opt/scold/share/hypogeal-twilight/am/template.alternative-autotools-autoconf-Makefrag-inlined-on-site src/automake/autoconf/Makefile.am
#TEMPLATE   edit in the relevant NAME1, NAME2, NAME3
#TEMPLATE   edit away the TEMPLATE words
#TEMPLATE
#TEMPLATE
# as an AUTOMAKE -*- Makefile -*- fragment and must obey AUTOMAKE-GNU Cooperation Orinciples
#
# AVOID ---> THIS IS A DEPRECATED INTERFACE <--- AVOID
# AVOID ---> THIS IS A DEPRECATED INTERFACE <--- AVOID
# AVOID ---> THIS IS A DEPRECATED INTERFACE <--- AVOID
#
# Instead, rely on the  newer interface
#
#   lib_libautotools_autoconf_la_IMPORT = something.something.dark_side
#   lib_libautotools_autoconf_la_TAG    = something::something::dark_side::TAG <---------- semi-optional
#   include @hypogeal_twilight_datadir@/mk/autotools/autoconf/Makefrag.mk
#

# chatter for the hypogeal-twilight world of generated-Config
V_HTGC = $(__v_HTGC_$(V))
__v_HTGC_ = $(__v_HTGC_$(AM_DEFAULT_VERBOSITY))
# ........ = @echo "  GEN     " $@;
__v_HTGC_0 = @echo "  HT-GC  ($@)";
__v_HTGC_1 = 

htGC = @hypogeal_twilight_libexec_ac@/generate-autotools-Config-module-from-config-header

lib_libautotools_autoconf_la = lib/libautotools-autoconf.la
lib_libautotools_autoconf_la_LIBADD = $(nothing)
lib_libautotools_autoconf_la_LDFLAGS = $(PACKAGE_LDFLAGS_SET)
lib_libautotools_autoconf_la_MODULES = $(call SCOLD_SOURCEStoMODULES, $(lib_libautotools_autoconf_la_SOURCES))
lib_libautotools_autoconf_la_SOURCES = obj/src/autotools/autoconf/Config/NAME1/NAME2/NAME3/CONFIG.cpp 

# whereas $(lib_libautotools_autoconf_la_SOURCES) must be literal names, the following *could* be computed values
#
# Suffix      Separator   Example
# --------------------------------------------------
# NAMEFRAG    ::          NAMEFRAG = NAME1::NAME2::NAME3
# PATHFRAG    /           NATHFRAG = NAME1/NAME2/NAME3
# MODULE      .           NODULE   = NAME1.NAME2.NAME3
#
lib_libautotools_autoconf_la_NAMEFRAG = NAME1::NAME2::NAME3
lib_libautotools_autoconf_la_PATHFRAG = NAME1/NAME2/NAME3
lib_libautotools_autoconf_la_MODULE   = NAME1.NAME2.NAME3
# yes, CONFIG.xcpp is synthesized into $(scold_cxxdir)
$(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp : config.h
	$(V_HTmkdir) mkdir -p $(@D)
	$(V_HTGC) $(htGC) --tag=$(lib_libautotools_autoconf_la_NAMEFRAG)::CONFIG --import=$(lib_libautotools_autoconf_la_MODULE) $< $@
$(scold_cxxdir)/autotools/autoconf/dependencies.mk: $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp
# else you will see the error:
#
#   obj/modules/fpp/autotools.autoconf.Config.NAME1.NAME2.NAME3.CONFIG:3:47: fatal error: autotools.autoconf.Config.NAME1.NAME2.NAME3: No such file or directory
#   #include <autotools.autoconf.Config.NAME1.NAME2.NAME3> < -------------- you don't want this, it doesn't exist
#
$(scold_cxxdir)/autotools/autoconf/dependencies.mk: bbDC_OPTIONS+=--no-insert-namespace
# because $(bbDC_OPTIONS) expects .../CONFIG.xcpp to be hand-coded in .../src/... not generated in .../obj/src/...
$(scold_cxxdir)/autotools/autoconf/dependencies.mk: scold_srcdir=$(scold_cxxdir)
$(scold_cxxdir)/autotools/autoconf/dependencies.mk: Makefile
	test -e Makefile
	test -e $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp
	$(AM_V_BB1ST) $(bbDC) $(bbDC_OPTIONS) $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp
	touch $@
#	$(AM_V_BB2ND) $(call bbSCOLD_DEPENDENCIES_COMPILE, $(lib_libautotools_autoconf_la_SOURCES))
# You MUST use the $(scold_cxxdir) variable, otherwise automake will try to process the include itself (GNU make must do that)
include $(scold_cxxdir)/autotools/autoconf/dependencies.mk
$(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.cpp : $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp
	: no-insert-namespace because the generated code supplies its own; \
	: use baleful-ballad, not -- $(aaDC) --no-insert-namespace --srcdir=$(scold_cxxdir) --objdir=$(scold_cxxdir) $< ; \
	: WATCHOUT - bbDC_OPTIONS contains --srcdir=$(scold_srcdir) which is wrong;
	$(bbDC)  --no-insert-namespace $(bbDC_OPTIONS) --srcdir=$(scold_cxxdir) $<; \
	test -e $@
$(scold_cxx_modulesdir)/fpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG : $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.cpp
	echo use baleful-ballad, not -- $(aaMC) $@ $(scold_cxx_modulesdir) $(scold_srcdir); \
	test -e $@
$(scold_cxx_modulesdir)/hpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG : $(scold_cxx_modulesdir)/fpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
$(scold_cxx_modulesdir)/ipp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG : $(scold_cxx_modulesdir)/hpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
$(scold_cxx_modulesdir)/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG : $(scold_cxx_modulesdir)/ipp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
$(scold_cxx_modulesdir)/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG : $(scold_cxx_modulesdir)/$(lib_libautotools_autoconf_la_MODULE)
clean-local::
	rm -f $(lib_libautotools_autoconf_la)
	rm -f $(scold_cxxdir)/autotools/autoconf/dependencies.mk
	rm -f $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.xcpp
	rm -f $(scold_cxxdir)/autotools/autoconf/Config/$(lib_libautotools_autoconf_la_PATHFRAG)/CONFIG.cpp
	rm -f $(scold_cxx_modulesdir)/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
	rm -f $(scold_cxx_modulesdir)/ipp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
	rm -f $(scold_cxx_modulesdir)/hpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
	rm -f $(scold_cxx_modulesdir)/fpp/autotools.autoconf.Config.$(lib_libautotools_autoconf_la_MODULE).CONFIG
