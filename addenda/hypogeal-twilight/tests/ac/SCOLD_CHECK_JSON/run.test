#!/bin/bash
cd ${0%/*} || exit 70

#
# WATCHOUT - this is not a normal test
# WATCHOUT - this is not a normal test - it fails because you MUST use HGTW_CHECK_JSONCPP instead
# WATCHOUT - this is not a normal test
#

set -e
# PWD is expected to be .../tests/ac/SOMETHING
declare with_hypogeal_twilight=${PWD%/*/*/*}
# We're not testing buildconf, so use a "standard" one.   Any buildconf "that works" will do.
# Make it work.
if [[ ! -e ./buildconf ]] ; then
    if ! cp ../../../bc/template.autotools-style-buildconf buildconf ; then
        echo "${0}: error, could not copy a reasonable buildconf"
        exit 1
    fi 1>&2
fi
if [[ ! -x ./buildconf ]] ; then
    if ! chmod a+x ./buildconf ; then
        echo "${0}: error, could not make the buildconf executable"
        exit 1
    fi 1>&2
fi

function generate() {
    declare file=$1 ; shift
    declare tfile="$(dirname $file)/t99.$$.${RANDOM}.${file##*/}~"
    cat > ${tfile?} && chmod a-w ${tfile?} && mv ${tfile?} ${file?}
}
generate Makefile.am <<__Makefile__
# An minimal automake -*- Makefile -*-
# automatically generated by $0 at $(date --rfc-3339=seconds=seconds)
default:
__Makefile__

with_hypogeal_twilight=${with_hypogeal_twilight} ./buildconf

set +e
./configure
actual_exit_code=$?

readonly expected_exit_code=1
if ((expected_exit_code == actual_exit_code)) ; then
    echo "OK: ./configure exited ${actual_exit_code}, as was expected"
else
    echo "Info: ./configure exited ${actual_exit_code}"
    echo "Error: ./configure was supposed to exit ${expected_exit_code}"
fi 1>&2
