#!/bin/sh
# This is boilerplate ... copy everywhere

# Run ./buildconf on the first time out
# if ./configure exists then you probably don't need to run this
#
# ./buildconf <--------------- upon receiving the dist
# ./configure <--------------- first time
# make <---------------------- rinse & repeat: edit-compile-test-debug
# make check <---------------- ibidem.
# [sudo] make install <------- ready
#

cd ${0%/*}
if ! type -p autotools-local-preconfigure ; then
    # if ${HYPOGEAL_TWILIGHT} is given, then perhaps it points to a development area, or perhaps to an installed root
    # e.g.
    #     HYPOGEAL_TWILIGHT=/build/scold/hypogeal-twilight
    #     HYPOGEAL_TWILIGHT=/opt/scold
    declare -a envGUESSES=( ${HYPOGEAL_TWILIGHT:+$HYPOGEAL_TWILIGHT/libexec} ${HYPOGEAL_TWILIGHT:+$HYPOGEAL_TWILIGHT/libexec/hypogeal-twilight} )
    # need the PWD because buildconf is recursive, into the submodules
    declare -a devGUESSES_prefixes=( ${PWD} ${PWD}/submodules ${PWD}/external ${PWD}/.. ${PWD}../.. ${PWD}../../.. /build/scold )
    declare -a devGUESSES=( ${devGUESSES_prefixes[@]/%//hypogeal-twilight/libexec} )
    # where else could they possibly have <strike>put</strike> hidden it?
    declare -a prodGUESSES_prefixes=( /opt/scold /usr/local/scold /usr/local /usr )
    declare -a prodGUESSES=( ${prodGUESSES_prefixes[@]/%//libexec/hypogeal-twilight} )
    guesses="${envGUESSES:+ ${envGUESSES[@]}}${devGUESSES:+ ${devGUESSES[@]}}${prodGUESSES:+ ${prodGUESSES[@]}}"
    export PATH="${guesses// /:}:$PATH"
fi

# enfreshen the (local) autoconf m4 macros
# also run buildconf recursively, if necessary
# behaves according to ENV{CONFIG_SITE}
autotools-local-preconfigure "$@"

