#!/usr/bin/perl

#
# Creates config.settings from config.settings.in and optionally, config.settings.local
#
# Substitutes
#     @PWD@ from ${PWD}
#     @hypogeal_twilight_datarootdir@ by examining $0

use strict;
use warnings;
use Cwd qw(&getcwd);
use File::Basename qw(&basename);

our $CWD = getcwd();
our $NAME = eval {
    my ($name) = ($0 =~ m!(?:.*/)?(.*)!);
    my $cwd = basename($CWD);
    return qq(${name}[$cwd]);
};

our $INPUT = q(./config.settings.in);
our $LOCAL = q(./config.settings.local);
our $FINAL = q(./config.settings);

our $VERSION = <<__VERSION__;
$NAME: version v0.45.1-0.devel of hypogeal-twilight
__VERSION__
our $USAGE = <<__USAGE__;
usage: $NAME        (no options)
    reads $INPUT
    writes $FINAL
    expects to be run from the top level from ./buildconf
__USAGE__

if (@ARGV) {
    do {
        print $USAGE;
        exit 0;
    } if q(--usage) eq $ARGV[0] || q(--help) eq $ARGV[0] || q(-h) eq $ARGV[0];
    do {
        print $VERSION;
        exit 0;
    } if q(--version) eq $ARGV[0] || q(-V) eq $ARGV[0];
}
die $USAGE unless 0 == @ARGV;

use Cwd qw(&getcwd);
use POSIX qw(&chmod &localtime &rename &strftime &unlink);
use File::Basename qw(&basename &dirname);

sub readonly($) { 
    my $fh = shift;
    my @bundle = (stat $fh);
    return undef unless @bundle;
    my $perm = $bundle[2] & 07777;
    return chmod($perm & ~0333, $fh);
}

our $TEMPY = dirname($INPUT) . q(/t99.) . basename($INPUT) . qq(~);

our $timestamp = strftime("%Y-%M-%d %H:%M:%S", localtime(time));
our $buildconf = basename($0);
our $substitution_PWD = getcwd();
our $substitution_hypogeal_twilight_datarootdir = dirname($0);

print STDERR qq($NAME: info, establishing $FINAL from $INPUT...\n);

open(my $input, '<', $INPUT) or die qq($NAME: error, failed to open $INPUT because $!\n);
open(my $tempy, '>', $TEMPY) or die qq($NAME: error, failed to open $TEMPY because $!\n);
readonly($tempy) or die qq($NAME: error, failed to chmod readonly $TEMPY because $!\n);
while (<$input>) {
    s!\@PWD\@!$substitution_PWD!g;
    s!\@hypogeal_twilight_datarootdir\@!$substitution_hypogeal_twilight_datarootdir!g;
    print $tempy qq(# Established by $buildconf at $timestamp\n# incorporated from $INPUT\n#\n) if $. == 2;
    print $tempy $_;
}
close($input) or die qq($NAME: error, failed to close $INPUT because $!\n);
if (-f $LOCAL) {
    open(my $local, '<', $LOCAL) or die qq($NAME: error, failed to open $LOCAL because $!\n);
    while (<$local>) {
        s!\@PWD\@!$substitution_PWD!g;
        s!\@hypogeal_twilight_datarootdir\@!$substitution_hypogeal_twilight_datarootdir!g;
        print $tempy qq(#\n# incorporated from $LOCAL\n#\n) if $. == 2;
        print $tempy $_;
    }
    close($local) or die qq($NAME: error, failed to close $LOCAL because $!\n);
}
close($tempy) or die qq($NAME: error, failed to close $TEMPY because $!\n);
rename($TEMPY, $FINAL) or die qq($NAME: error, failed to rename $TEMPY $FINAL because $!\n);
exit(0);
