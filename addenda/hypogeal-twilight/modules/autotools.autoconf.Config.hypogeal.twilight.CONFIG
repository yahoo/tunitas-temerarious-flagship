// -*- c++ -*- hand-coded
#pragma once
//
// ... by way of example ...
//
// see .../ac/generate-autotools-Config-module-from-config-header
//
namespace hypogeal {
  namespace twilight {
    enum CONFIG { };
  }
}
#include <autotools.autoconf.Config>
namespace autotools {
  namespace autoconf {
    template<> struct Config<hypogeal::twilight::CONFIG>;
  }
}
template<> struct autotools::autoconf::Config<hypogeal::twilight::CONFIG> {
  inline static constexpr auto package() -> char const * { return "hypogeal-twilight"; }
  // Define to the address where bug reports for this package should be sent.
  inline static constexpr auto package_bugreport() -> char const * { return "operator@scold-lang.org"; }
  // Define to the full name of this package.
  inline static constexpr auto package_name() -> char const * { return "hypogeal-twilight"; }
  /// Define to the full name and version of this package. */
  inline static constexpr auto package_string() -> char const * { return "hypogeal-twilight 0.0.0"; }
  // Define to the version of this package.
  inline static constexpr auto package_version() -> char const * { return "0.0.0"; }
  // Package (semver.org) version, as a vstring.
  inline static constexpr auto package_version_string() -> char const * { return "v0.0.0"; }
  // Version number of package.
  inline static constexpr auto version() -> char const * { return "0.0.0"; }
};
