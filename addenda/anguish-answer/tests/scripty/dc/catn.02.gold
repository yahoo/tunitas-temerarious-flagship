lt-dc, debug mode implies verbose mode, enabling verbose mode
lt-dc: debug, SEARCHPATH={ } SOURCES_AREA="tests/scripty/dc" LOCAL_OBJECTS_AREA="obj/src" LOCAL_MODULES_AREA="obj/modules"
lt-dc: debug, opening (for read) "tests/scripty/dc/catn.01.xcpp"
lt-dc: debug, opening (for write) based upon "tests/scripty/dc/catn.01.xcpp"
lt-dc: debug, opening (for write) file "obj/modules/fpp/catn.01"
lt-dc: debug, opening (for write) file "obj/modules/hpp/catn.01"
lt-dc: debug, opening (for write) file "obj/modules/ipp/catn.01"
lt-dc: debug, opening (for write) file "obj/modules/catn.01"
lt-dc: debug, opening (for write) file "obj/src/catn.01.cpp"
DEBUG opening "obj/modules/fpp/catn.01"
DEBUG opening "obj/modules/hpp/catn.01"
DEBUG opening "obj/modules/ipp/catn.01"
DEBUG opening "obj/modules/catn.01"
lt-dc: debug, opening "tests/scripty/dc/catn.01.xcpp"
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":1:#divert <fpp>
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":2:namespace tests::dc {
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":3:  class Oklahoma;
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":4:}
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":5:#endiv
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":6:#divert <hpp>
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":7:#import std.string
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":8:namespace tests::dc {
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":9:  inline auto function(int) -> int;
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":10:  auto function(std::string) -> std::string;
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":11:}
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":12:struct tests::decOklahoma {
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":13:  int i;
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":14:};
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":15:#endiv
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":16:#divert <ipp>
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":17:auto tests::dc::function(int i) -> int {
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":18:  return i+1;
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":19:}
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":20:#endiv
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":21:#divert <cpp>
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":22:auto tests::dc::function(std::string) -> std::string {
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":23:  return std::string{};
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":24:}
lt-dc: debug, "tests/scripty/dc/catn.01.xcpp":25:#endiv
