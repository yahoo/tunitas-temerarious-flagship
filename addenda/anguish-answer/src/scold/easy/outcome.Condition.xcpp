// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold::easy::outcome {
  //
  // The outcome (error) Conditions
  //
  enum class Condition
    { SUCCESS,
      FAILURE };
}
#import std.is_error_condition_enum
namespace std {
  template<> struct is_error_condition_enum<scold::easy::outcome::Condition>;
}
#endiv
#divert <hpp>
#import std.true_type
template<> struct std::is_error_condition_enum<scold::easy::outcome::Condition> : public std::true_type { };
#import std.error_condition
namespace scold::easy::outcome {
  inline auto make_error_condition(Condition) -> std::error_condition;
};
#endiv
#divert <ipp>
#import scold.easy.outcome.category
inline auto scold::easy::outcome::make_error_condition(Condition c) -> std::error_condition {
  return std::error_condition{(int) c, category()};
}
#endiv
