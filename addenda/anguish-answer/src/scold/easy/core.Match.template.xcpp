// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import scold.easy.core.Match.declaration
#endiv
#divert <hpp>
#import scold.easy.line.Object
#import lite.regex.matching.Results
namespace scold::easy::core {
  // reminder: (Match << line) side-effects the matcher with $1, $2, $3, as appropriate.
  template<Pattern PATTERN> inline auto operator==(line::Object const &, Match<PATTERN> const &) -> bool;
  template<Pattern PATTERN> inline auto operator!=(line::Object const &, Match<PATTERN> const &) -> bool;
}
#divert <ipp>
namespace scold::easy {
  template<core::Pattern PATTERN> auto core::operator==(line::Object const &l, Match<PATTERN> const &p) -> bool {
    return p(l);
  }
  template<core::Pattern PATTERN> auto core::operator!=(line::Object const &l, Match<PATTERN> const &p) -> bool {
    return !operator==(l, p);
  }
}
#endiv
