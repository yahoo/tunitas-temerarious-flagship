// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import std.back_insert_iterator
namespace scold::easy {
  //
  // Create a back insert iterator
  // Same as std::back_inserter
  //
  // Is is distinct from std::back_inserter because it is friends with the scold::easy containers.
  //
  // Usage:
  //
  //    Map<K, V> map;
  //    i = back_inserter(map);
  //
  //    List<V> list;
  //    i = back_inserter(list);
  //
  template<typename CONTAINER> inline auto back_inserter(CONTAINER &) -> std::back_insert_iterator<CONTAINER>;
}
#endiv
#divert <ipp>
#import nonstd.required.Container
template<nonstd::required::Container CONTAINER> auto scold::easy::back_inserter(CONTAINER &container) -> std::back_insert_iterator<CONTAINER> {
  static_assert(nonstd::required::Container<CONTAINER>);
  return std::back_insert_iterator<CONTAINER>{container};
}
#endiv
