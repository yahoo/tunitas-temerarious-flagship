// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
namespace scold::easy::exception {
  //
  // Quitting the application, with failure.
  //
  // Usage:
  //
  //   try {
  //     ...computing...
  //     throw Failing{NAME};
  //     ...
  //   } catch (exception::aspect::Exiting const &e) {
  //     e.stream() << format(e) << '\n';
  //   }
  //
  class Failing;
}
#endiv
#divert <hpp>
#import scold.easy.exception.Quitting
class scold::easy::exception::Failing : public Quitting {
  using ancestor = Quitting;
public:
  inline explicit Failing(Program const &);
};
#endiv
#divert <ipp>
#import nonstd.sysexits.constants
namespace scold::easy::exception {
  Failing::Failing(Program const &name)
    : ancestor{name, nonstd::sysexits::FAIL, "processing has failed"} // richer explanation has been provided prior
  { }
}
#endiv
