// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <hpp>
#import want.aliases.detail.Any
#import want.aliases.required.Stringable
namespace want::aliases {
  //
  // Is the string equal to *any* of these?
  //
  // Usage:
  //
  //   if (word == any("apple"s, "banana"s, "cheery"s, "dog"s)) {
  ///    ...abcde
  //   }
  //
  template<typename... STRINGS> inline auto any(STRINGS... string) -> detail::Any requires (true && ... && required::Stringable<STRINGS>);
}
#endiv
#divert <ipp>
#import std.move
template<typename... STRINGS> auto want::aliases::any(STRINGS ...values) -> detail::Any requires (true && ... && required::Stringable<STRINGS>) {
  return detail::Any{std::move(values)...};
}
#endiv
