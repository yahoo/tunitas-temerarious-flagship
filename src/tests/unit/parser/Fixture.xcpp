// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <fpp>
namespace tests::unit::parser { struct Fixture; }
#endiv
#divert <hpp>
struct tests::unit::parser::Fixture : public cppunit::test::Fixture {
  auto test_trim() -> void;
  auto test_usage_assess() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import tests.unit.parser.assess.Fixture
#import tunitas.flagship.temerarious.parser.trim
namespace tests::unit::parser {
  auto Fixture::test_trim() -> void {
    CPPUNIT_ASSERT(""sv == library::trim(""sv));
    CPPUNIT_ASSERT(""sv == library::trim(" "sv));
    CPPUNIT_ASSERT(""sv == library::trim("    "sv));
    CPPUNIT_ASSERT("a"sv == library::trim("a"sv));
    CPPUNIT_ASSERT("a"sv == library::trim(" a"sv));
    CPPUNIT_ASSERT("a"sv == library::trim(" a "sv));
    CPPUNIT_ASSERT("abc"sv == library::trim(" abc "sv));
    CPPUNIT_ASSERT("abc def"sv == library::trim(" abc def "sv));
  }
  auto Fixture::test_usage_assess() -> void {
    auto assessed = library::assess("");
    CPPUNIT_ASSERT(library::Assessment::PASSTHROUGH == std::get<0>(assessed));
    CPPUNIT_ASSERT(nullptr == std::get<1>(assessed));
    CPPUNIT_ASSERT(""sv == std::get<2>(assessed));
  }
  auto Fixture::suite() -> cppunit::Test * {
    using namespace rigging::suite;
    auto series = Stream{"parser"};
    series << call("trim", &Fixture::test_trim)
           << []{
                auto use = Stream{"usage"};
                use << call("assess", &Fixture::test_usage_assess)
                    << END;
                return move(use);
              }()
           << add<assess::Fixture>()
           << END;
    return finalize(series);
  }
}
#endiv
