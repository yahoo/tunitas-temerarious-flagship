// This is C++ 23 -*- c++ -*- -std=c++23 in the stylings of the S.C.O.L.D. design method.
// Copyright Yahoo Inc, 2021.
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-basics/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/components/basics/tree/LICENSE
// For terms and provenance see the LICENSE file at the top of the repository.
#divert <fpp>
#import rigging.suite.Fixture // ... v2-series
#import rigging.test.Fixture // .... v2-series
#endiv
#divert <hpp>
//
// rigging::ASSERTION is an ADL anchor point
//
// Usage:
//
//   #import rigging.ASSERTION
//   namespace tests::something {
//     using rigging::ASSERTION;
//   }
//   ...
//   ...some time later...
//   ...
//   namespace tests::something {
//     auto test_something() -> void {
//      require(ASSERTION< 0 != 1); ........................................ and ADL will find it.
//     }
//   }
//
#import rigging.ASSERTION // .............................. v2-series (see the commentariat above)
#import rigging.suite.Fixture // .......................... v2-series
#import rigging.Suite // .................................. ibidem.
#import tests.cppunit.test.Fixture // ..................... v1-series compatibility
#import tests.cppunit.Test // ............................. ibidem.
#import tests.cppunit.ASSERT // ........................... ibidem
//
// And every fixture wants to say something
//
#import std.cerr
#import std.clog
#import std.cout
#endiv
