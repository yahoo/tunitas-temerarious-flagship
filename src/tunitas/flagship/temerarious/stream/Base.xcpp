// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <fpp>
namespace tunitas::flagship::temerarious::stream {
  //
  // The commonalities among the streams.
  // Descendants only.
  //
  // Specification:
  //
  //   e.g. std::ios_base.
  //
  // Design:
  //
  //   Yes.
  //
  // Usage:
  //
  //   By inheritance into stream::Output, stream::Input
  //
  struct Base;
}
#endiv
#divert <hpp>
#import std.ios_base
#import std.ios
#forward tunitas.flagship.temerarious.stream.Filebuf
namespace tunitas::flagship::temerarious {
  namespace stream {
    using std::swap;
    inline auto swap(Base &, Base &) noexcept -> void;
  }
  class stream::Base {
    friend auto stream::swap(Base &, Base &) noexcept -> void { } // indeed, there is nothing to swap
  protected:
    virtual ~Base() = default;
  public:
    using Mode = std::ios_base::openmode;
    inline static constexpr auto OUT = std::ios_base::out;
    inline static constexpr auto IN = std::ios_base::in;
  };
}
#endiv
