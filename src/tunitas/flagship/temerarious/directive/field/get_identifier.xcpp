// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <hpp>
namespace tunitas::flagship::temerarious::directive::field::package_field::interface {
  //
  // get_identifier ... a one-argument directive (name, only)
  //
  // Specification:
  //
  //   Returns the identifier.
  //   Verify that the identifier is valid (matches the announced pattern).
  //   Verify that there are no other fields on the rest of the line.
  //   Else throw that certain exception.
  //
  // Preconditions:
  //
  //   The leading and trailing blanks have been removed from the payload range.
  //
  // Example:
  //
  //      /------------------------------------------------------- dot
  //      |
  //      |/------------------------------------------------------ directive 'x'
  //      ||
  //      ||                   /---------- a single identifier (no embedded blanks)
  //      ||                   |
  //      ||   /---------------+------------\ (there)
  //      ||   |                            |
  //      vv   v                            v
  //     |.x   something.something.Dark_Side!     |<----- end
  //         ^^                              ^^^^^
  //         ||                              ||||| 
  //         \\------------------------------\\\\\--------------- leading & trailing blanks were already trimmed
  //
  // Usage:
  //
  //   auto some_directive(State &, Outbound &, Location where, Payload payload) -> void {
  //      auto name = get_identifier(where, payload);
  //      ...blah blah blah...
  //   }
  //
  inline auto get_identifier(Location where, Payload payload) -> string::View;
}
#endiv
#divert <ipp>
#import std.isspace
#import std.all_of
namespace tunitas::flagship::temerarious::directive::field::package_field {
  auto interface::get_identifier(Location where, Payload payload) -> string::View {
    ensure_not_empty(where, payload);
    if (has_blanks(payload)) {
      throw exception::Statement{where, "there are multiple words here (only one is allowed)"sv};
    }
    if (!is_identifier(payload)) {
      throw exception::Field{where, "the identifier does not match m!^[a-z][-_/a-z0-9]*$!i"sv};
    }
    return payload;
  }
}
#endiv
