// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <fpp>
namespace tunitas::flagship::temerarious::exception {
  //
  // There was some problem parsing a payload (in a directive processor)
  //
  // Specification:
  //
  //   Has UX-quality grammar (reasonable explanation, complete sentences, etc.).
  //
  //   Constructed with a single reason, following exception::Runtime
  //   i.e. https://en.cppreference.com/w/cpp/error/runtime_error
  //
  // Design:
  //
  //   Sure.
  //
  // Lifetimes;
  //
  //   Because the feature::Location uses string::View, the lifetime of the source must be longer than the exception.
  //   This is trivially satisfied by recovering the Location from a nearby stream::Input by Input::input_name()
  //
  // Usage:
  //
  //   try {
  //      ...
  //      throw exception::Payload{...somehow...};
  //      ...
  //   } catch (exception::Payload const &) {
  //      ...ours...
  //   } catch (exception::Aspect const &) {
  //      ...otherwise ours...
  //   }
  //
  class [[nodiscard]] Payload;
}
#endiv
#divert <hpp>
#import tunitas.flagship.temerarious.exception.partial.Processing
class tunitas::flagship::temerarious::exception::Payload : public partial::Processing {
  using Ancestor = partial::Processing;
public:
  using Ancestor::Processing;
};
#endiv
