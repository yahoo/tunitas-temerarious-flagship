// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <fpp>
#forward app.roff.main
#endiv
#divert <hpp>
#import std.ostream
namespace app::roff::package_body_main {
  namespace body {
    inline auto operator<<(std::ostream &, Palette const &) -> std::ostream &;
  }
  class body::Palette {
    using Stream = std::ostream;
  public:
    inline [[implicit]] Palette(Stream &, Program const &, [[inout]] Preparation &);
    Palette(Palette const &) = delete;
    auto operator=(Palette const &) -> Palette & = delete;
    std::ostream &outbound;
    Program const &program; // quirky and probably unnecessary (why not copy it?) ... but the origin will stay stationary
    Preparation &preparation;
  private:
    struct Base {
      [[implicit]] Base(Palette const &y) : palette{y} { }
      Palette const &palette;
    };
  public:
    struct Error;
    struct Warning;
    struct Notice;
  };
}
#endiv
#divert <ipp>
#import app.roff.main.Palette.Error
#import app.roff.main.Palette.Warning
#import app.roff.main.Palette.Notice
namespace app::roff::package_body_main::body {
  Palette::Palette(Stream &s, Program const &p, Preparation &n)
    : outbound{s}
    , program{move(p)}
    , preparation{n}
  { }
}
#endiv
