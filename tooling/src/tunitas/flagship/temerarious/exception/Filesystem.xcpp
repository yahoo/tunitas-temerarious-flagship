// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media
// Licensed under the terms of the Apache-2.0 license.
// For terms, see the LICENSE file at https://github.com/yahoo/tunitas-temerarious-flagship/blob/master/LICENSE
// For terms, see the LICENSE file at https://git.tunitas.technology/all/build/temerarious-flagship/tree/LICENSE
#divert <fpp>
namespace tunitas::flagship::temerarious::exception {
  //
  // A file system exception, from The Temerarious Flagship.
  //
  // Specification:
  //
  //   https://en.cppreference.com/w/cpp/filesystem/filesystem_error
  //
  // Design:
  //
  //   from the Non-Standard Library 
  //
  // Usage:
  //
  //   Look it up.
  //
  class [[nodiscard]] Filesystem;
}
#endiv
#divert <hpp>
#import tunitas.exception.Aspect
#import tunitas.flagship.temerarious.exception.Aspect
#import tunitas.string.View
#import nonstd.exception.Filesystem
class tunitas::flagship::temerarious::exception::Filesystem : public virtual Aspect,
                                                              public virtual tunitas::exception::Aspect,
                                                              public nonstd::exception::Filesystem<string::View> {
  struct Ancestors {
    struct Aspects { /* ... who cares... */ };
    using Exception = nonstd::exception::Filesystem<string::View>;
  };
public:
  using Ancestors::Exception::View; // you "just have to know..." that the constructor is named View
  auto what() const noexcept -> char const * override { return Ancestors::Exception::what(); }
};
#endiv
