# An automake-included -*- Makefile -*- fragment.
#
# Avoid including this file directly (there is no need)
# This include file will be included by automake (at configure time), not by GNU make (at run time)
#
# Usage (in a Makefile.am)
#
#     include @temerarious_flagship_datadir@/am/build.am
#
included_temerarious_flagship_am_compile_am := 1

scold_srcdir = src
scold_objdir = obj
scold_cxxdir = obj/src
scold_cxx_modulesdir = $(scold_objdir)/modules
scold_cxx_includedir = $(scold_objdir)/include

# TF_PROG_DC ----> DC = remonstrate
#
$(if $(DC),$(__OK),$(error DC is not set, you should call TF_PROG_DC in configure.ac))
ifeq "FAIL" "$(shell type -p $(DC) 2>/dev/null || echo FAIL)"
$(warning DC=$(DC) and $(DC) is not in your PATH)
ifneq "0" "$(words $(wildcard $(std_scold_prefix)/bin/$(DC)))"
$(warning yet $(std_scold_prefix)$(DC) exists so as a temporary hack, the build system will use that.)
$(warning SUGGEST adding 'export PATH=$(std_scold_prefix)/bin:$${PATH}' to your build environment or ~/.bash_profile)
DC := $(std_scold_prefix)/bin/$(DC)
$(warning have reset DC=$(DC))
endif
endif

# $(DC_FLAGS) is reserved to the command line.
# $(Makefile_DC_FLAGS) is reserved to the top-level Makefile.
# $(SUBDIRS) is that certain automake variable from Makefile.am.
DC_OPTIONS = \
  $(DC_FLAGS) $(Makefile_DC_FLAGS) \
  $(comment --verbose) \
  --make-directories \
  $(addprefix --submodule=, $(SUBDIRS)) \
  $(DC_SEARCHPATH) \
  --modulesdir-directory=$(scold_cxx_modulesdir) \
  --modulesdir-variable='$$(scold_cxx_modulesdir)' \
  --objdir-directory=$(scold_cxxdir) \
  --objdir-variable='$$(scold_cxxdir)' \
  $(comment WATCHOUT - the source may be in $(scold_cxxdir) so this is wrong for .../CONFIG.xcpp) \
  --srcdir-directory=$(scold_srcdir) \
  --srcdir-variable='$$(scold_srcdir)' \
  $(end)

# %.xcpp -> package.subpackage.Class  (the module name as a dotted word)
# %.cpp  -> package.subpackage.Class  (same)
# e.g. obj/src/package/subpackage/Class.cpp -> package.subpackage.Class
TF_SOURCEStoMODULENAMES = \
  $(subst /,., \
	  $(patsubst %/namespace,%, \
	  $(patsubst $(scold_cxxdir)/%,%, \
	  $(patsubst $(scold_srcdir)/%,%, \
	  $(patsubst %.cpp,%, \
	  $(patsubst %.xcpp,%, \
          $1))))))\
  $(end)
# %.xcpp -> <package.subpackage.Class>  (the path to the lead include file)
# %.cpp  -> <package.subpackage.Class>  (same)
# e.g. obj/src/package/subpackage/Class.cpp -> obj/modules/package.subpackage.Class
TF_SOURCEStoMODULES = \
  $(addprefix $(scold_cxx_modulesdir)/, \
              $(call TF_SOURCEStoMODULENAMES, $1)) \
  $(end)
# %.cpp -> %.xcpp
TF_SOURCEStoSOURCES = \
  $(patsubst $(scold_cxxdir)/%.cpp, $(scold_srcdir)/%.xcpp, $1) \
  $(end)
# %.cpp -> %.mk
TF_SOURCEStoMAKEFILES = \
  $(patsubst %.cpp, %.mk, $1) \
  $(end)

#
# Usage (in a .../Makefrag.am):
#
# /dependencies.mk:
#     $(TF_1ST) $(call TF_DISAGGREGATE_COMPILE, ...*.cpp sources...)
#     $(TF_2ND) $(call TF_DEPENDENCIES_COMPILE, ...*.cpp sources...)
#
SCOLD_DISAGGREGATE_COMPILE = $(error instead use TF_DISAGGREGATE_COMPILE)
SCOLD_DEPENDENCIES_COMPILE = $(error instead use TF_DEPENDENCIES_COMPILE)
define TF_DISAGGREGATE_COMPILE =
  $(DC) $(DC_OPTIONS) $(call TF_SOURCEStoSOURCES, $1)
endef
define TF_DEPENDENCIES_COMPILE =
  mkdir -p $(@D) && \
  for mk in $(call TF_SOURCEStoMAKEFILES, $1) ; do echo "-include $$mk" ; done > $@
endef
#
# An alternateive to the two-step
#
# Usage (in a .../Makefrag.am)
#
# $(scold_cxxdir)/.../space/subspace/.../dependencies.mk:
#     $(TF_1ST) $(call TF_DISAGGREGATE, ...*.cpp sources...)
#     test -e $@
#
define TF_DISAGGREGATE =
  $(call TF_DISAGGREGATE_COMPILE, $1); \
  $(call TF_DEPENDENCIES_COMPILE, $1)
endef

# The chatter is the first eleven (!!) characters.
#
# 123456789ab
# <--------->
#   CXX      obj/src/posix/shell/namespace.lo
#
TF1ST = $(tf__v_1ST_$(V))
tf__v_1ST_ = $(tf__v_1ST_$(AM_DEFAULT_VERBOSITY))
# .....................123456789ab

tf__v_1ST_0 = @echo "  DECONSTRUCT $@";
tf__v_1ST_1 = 

TF2ND = $(tf__v_2ND_$(V))
tf__v_2ND_ = $(tf__v_2ND_$(AM_DEFAULT_VERBOSITY))
# .....................123456789ab
tf__v_2ND_0 = @echo "  MAKEFRAG    $@";
tf__v_2ND_1 = 

TFDC = $(tf__v_DC_$(V))
tf__v_DC_ = $(tf__v_DC_$(AM_DEFAULT_VERBOSITY))
# .....................123456789ab
tf__v_DC_0 = @echo "   DECONSTRUCT $@";
tf__v_DC_1 = 
